create table
  public.users (
    user_id bigint not null,
    username text not null,
    name text not null,
    constraint users_pkey primary key (user_id)
  ) tablespace pg_default;


create table
  public.nfts (
    --------------------------------
    nft_id serial not null, 
    collection_name text not null,
    address text not null,
    targetPrice integer null,
    currency text not null,
    chain text not null,
    user_id int8 not null,
    is_alert boolean null,
    --------------------------------
    constraint nfts_pkey primary key (nft_id),
    constraint nfts_user_id_fkey foreign key (user_id) references users (user_id)
  ) tablespace pg_default;

-------------------------ADDRESSES------------------------------------

0x51bb4c8bb4901d6aa061282cd7ed916eec715a29 - ETH
0x8a90cab2b38dba80c64b7734e58ee1db38b8992e - ETH
0x6ecfac3f581faf25086c95f30077e840681dde2a - MATIC
0x58318bceaa0d249b62fad57d134da7475e551b47 - ARB


create table public.nfts (
  nft_id bigserial not null,
  collection_name text not null,
  address text not null,
  target_price integer null,
  currency text not null,
  chain text not null,
  user_id text not null,
  is_alert boolean null default false,
  created_at timestamp with time zone not null default timezone ('utc'::text, now()),
  updated_at timestamp with time zone not null default timezone ('utc'::text, now()),
  last_checked_price numeric(20, 8) null,
  last_checked_at timestamp with time zone null,
  alert_triggered boolean null default false,
  constraint nfts_pkey primary key (nft_id),
  constraint nfts_user_id_fkey foreign KEY (user_id) references users (user_id) on delete CASCADE
) TABLESPACE pg_default;
